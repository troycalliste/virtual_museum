<div id="info">
  <a href="#" target="_blank" rel="noopener">three.js</a> - webgl skin rendering demo.<br/>
  <a class="threedee" href="http://graphics.cs.williams.edu/data/meshes.xml#14" target="_blank" rel="noopener">Lee Perry-Smith</a> head.

</div>
<canvas id="myCanvas3"></canvas>
<button class="arrow left">
<svg width="60px" height="80px" viewBox="0 0 50 80" xml:space="preserve">
  <polyline fill="none" stroke="black" stroke-width="1" stroke-linecap="round" stroke-linejoin="round" points="
45.63,75.8 0.375,38.087 45.63,0.375 "/>
</svg>
</button>
<button class="arrow right">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="60px" height="80px" viewBox="0 0 50 80" xml:space="preserve">
  <polyline fill="none" stroke="black" stroke-width="1" stroke-linecap="round" stroke-linejoin="round" points="
0.375,0.375 45.63,38.087 0.375,75.8 "/>
</svg>
</button>
<script>
  var canv = document.getElementById('myCanvas3');

  var renderer,
    scene,
    camera,

    myCanvas3 = document.getElementById('myCanvas3');
    var statsEnabled = true;

            var directionalLight;
            var mouseX = 0, mouseY = 0;
            var targetX = 0, targetY = 0;
            var windowHalfX = window.innerWidth / 2;
            var windowHalfY = window.innerHeight / 2;
            var smallWindow = window.innerWidth / 100;


  //RENDERER
  renderer = new THREE.WebGLRenderer({
    canvas: myCanvas3,
    antialias: true,
    alpha: true
  });
  renderer.setClearColor(  0xff0000, 0 );
  renderer.setPixelRatio(window.devicePixelRatio);
  renderer.setSize(window.innerWidth, window.innerHeight);

  //CAMERA
  camera = new THREE.PerspectiveCamera(35, window.innerWidth / window.innerHeight, 0.1, 1000 );

  //SCENE
  scene = new THREE.Scene();

  //LIGHTS
  var light = new THREE.AmbientLight(0xffffff, 0.5);
  scene.add(light);

  var light2 = new THREE.PointLight(0xffffff, 1);
  scene.add(light2);

  var loader = new THREE.GLTFLoader();

  loader.load('<%= asset_path 'tyrion.gltf' %>', handle_load);



  var manager = new THREE.LoadingManager(manager);
  mesh = 0;


   function handle_load(gltf) {

      console.log(gltf);

      mesh = gltf.scene;
      console.log(mesh.children[0]);
      mesh.children[0].material = new THREE.MeshLambertMaterial();

      scene.add( mesh );
      mesh.position.z = -20;
      mesh.position.x = 0;
      mesh.rotation.y = 9.5;





  }
     render();
  function render() {




        if ( mesh ) {


          //
          // mesh.rotation.y += 0.01;
          // mesh.position.x += .01;
          //animation mesh
          // mesh.morphTargetInfluences[ 0 ] = Math.sin(delta) * 20.0;

         }





  renderer.render(scene, camera);



    requestAnimationFrame(render);

    // var box = new THREE.Box3().setFromObject( mesh3 );
    // console.log( box.getSize() );

  }
</script>
